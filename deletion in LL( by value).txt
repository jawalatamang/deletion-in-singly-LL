class Node:
    def __init__(self,data):
        self.data = data
        self.link = None
        
class LinkedList:
    def __init__(self):
        self.head = None
        
    def print_LL(self):
        if self.head == None:
            print("Linked List is empty! ")
        else:
            n = self.head
            while n is not None:
                print(n.data)
                n = n.link

    def add_begin(self,data):
        new_node = Node(data)
        new_node.link = self.head
        self.head = new_node

    def delete_begin(self):
        if self.head is None:
            print("linked list is empty ! ")
        else:
            self.head = self.head.link
            
    def delete_end(self):
        if self.head is None:
            print("Linked list is empty so can't delete nodes !")
        else:
            n = self.head
            while n.link.link is not None:
                n = n.link
            n.link = None
            
    def delete_by_value(self,x):
        if self.head is None:
            print("LL is empty so can't delete node")
            return
        if x == self.head.data:
            self.head = self.head.link
            return
        n = self.head
        while n.link is not None:
            if x == n.link.data:
                break
            n = n.link
        if n.link is None:
            print("node is not present !")
        else:
            n.link = n.link.link            

LL1 = LinkedList()
LL1.add_begin(10)
LL1.add_begin(20)
LL1.add_begin(30)
LL1.delete_by_value(20)
LL1.print_LL()
                